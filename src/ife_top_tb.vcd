$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 b clk $end
  $var wire 1 c rst $end
  $var wire 8 d ext_block_id [7:0] $end
  $var wire 128 e ext_block_data [127:0] $end
  $var wire 1 i ext_block_valid $end
  $var wire 4 j core_busy [3:0] $end
  $var wire 1024 k core_result_0 [1023:0] $end
  $var wire 1024 -! core_result_1 [1023:0] $end
  $var wire 1 M! commit_valid_in $end
  $var wire 8 N! serial_block_id [7:0] $end
  $var wire 128 O! serial_block_data [127:0] $end
  $var wire 1 S! serial_valid $end
  $scope module ife_top $end
   $var wire 32 Z! BLOCK_ID_WIDTH [31:0] $end
   $var wire 32 [! INSTR_WIDTH [31:0] $end
   $var wire 32 \! BLOCK_SIZE [31:0] $end
   $var wire 32 \! NUM_CORES [31:0] $end
   $var wire 32 [! NUM_REGS [31:0] $end
   $var wire 32 [! REG_WIDTH [31:0] $end
   $var wire 1 b clk $end
   $var wire 1 c rst $end
   $var wire 8 d ext_block_id [7:0] $end
   $var wire 128 e ext_block_data [127:0] $end
   $var wire 1 i ext_block_valid $end
   $var wire 4 j core_busy [3:0] $end
   $var wire 1024 k core_result_0 [1023:0] $end
   $var wire 1024 -! core_result_1 [1023:0] $end
   $var wire 1 M! commit_valid_in $end
   $var wire 8 N! serial_block_id [7:0] $end
   $var wire 128 O! serial_block_data [127:0] $end
   $var wire 1 S! serial_valid $end
   $var wire 8 & q_block_id_out [7:0] $end
   $var wire 128 ' q_block_out [127:0] $end
   $var wire 1 + q_valid_out $end
   $var wire 1 ]! ready_in $end
   $var wire 1 , is_safe $end
   $var wire 4 # core_idle_mask [3:0] $end
   $var wire 8 & block_id_parallel [7:0] $end
   $var wire 128 ' block_data_parallel [127:0] $end
   $var wire 4 T! dispatch_parallel [3:0] $end
   $var wire 1 U! valid_parallel $end
   $var wire 8 & block_id_serial_dispatch [7:0] $end
   $var wire 128 ' block_data_serial_dispatch [127:0] $end
   $var wire 1 V! valid_serial_dispatch $end
   $var wire 1 W! commit_ok $end
   $var wire 1 X! commit_fail $end
   $var wire 1 X! reexecute_serial $end
   $var wire 8 N! bypass_block_id [7:0] $end
   $var wire 128 O! bypass_block_data [127:0] $end
   $var wire 1 S! bypass_valid $end
   $var wire 1 S! bypass_fallback $end
   $scope module u_block_queue $end
    $var wire 32 ^! BLOCK_ID_WIDTH [31:0] $end
    $var wire 32 _! INSTR_WIDTH [31:0] $end
    $var wire 32 `! BLOCK_SIZE [31:0] $end
    $var wire 32 ^! QUEUE_DEPTH [31:0] $end
    $var wire 1 b clk $end
    $var wire 1 c rst $end
    $var wire 8 d block_id_in [7:0] $end
    $var wire 128 e block_in [127:0] $end
    $var wire 1 i valid_in $end
    $var wire 1 ]! ready_in $end
    $var wire 8 & block_id_out [7:0] $end
    $var wire 128 ' block_out [127:0] $end
    $var wire 1 + valid_out $end
    $var wire 1 ]! ready_downstream $end
    $var wire 136 - queue[0] [135:0] $end
    $var wire 136 2 queue[1] [135:0] $end
    $var wire 136 7 queue[2] [135:0] $end
    $var wire 136 < queue[3] [135:0] $end
    $var wire 136 A queue[4] [135:0] $end
    $var wire 136 F queue[5] [135:0] $end
    $var wire 136 K queue[6] [135:0] $end
    $var wire 136 P queue[7] [135:0] $end
    $var wire 32 a! PTR_WIDTH [31:0] $end
    $var wire 3 U head [2:0] $end
    $var wire 3 V tail [2:0] $end
    $var wire 4 W count [3:0] $end
    $var wire 1 X full $end
    $var wire 1 Y empty $end
   $upscope $end
   $scope module u_bypass $end
    $var wire 32 Z! BLOCK_ID_WIDTH [31:0] $end
    $var wire 32 [! INSTR_WIDTH [31:0] $end
    $var wire 32 \! BLOCK_SIZE [31:0] $end
    $var wire 1 b clk $end
    $var wire 1 c rst $end
    $var wire 8 N! block_id_in [7:0] $end
    $var wire 128 O! block_in [127:0] $end
    $var wire 1 S! valid_in $end
    $var wire 1 V! from_dispatch $end
    $var wire 1 X! from_commit $end
    $var wire 8 N! block_id_out [7:0] $end
    $var wire 128 O! block_out [127:0] $end
    $var wire 1 S! valid_out $end
    $var wire 1 S! is_fallback $end
   $upscope $end
   $scope module u_commit $end
    $var wire 32 ^! BLOCK_ID_WIDTH [31:0] $end
    $var wire 32 _! NUM_REGS [31:0] $end
    $var wire 32 _! REG_WIDTH [31:0] $end
    $var wire 1 b clk $end
    $var wire 1 c rst $end
    $var wire 1 M! valid_in $end
    $var wire 8 & block_id [7:0] $end
    $var wire 1024 k result_core_0 [1023:0] $end
    $var wire 1024 -! result_core_1 [1023:0] $end
    $var wire 1 W! commit_ok $end
    $var wire 1 X! commit_fail $end
    $var wire 1 X! reexecute_serial $end
    $var wire 1 $ mismatch $end
    $scope module unnamedblk1 $end
     $var wire 32 % i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_depcheck $end
    $var wire 32 _! INSTR_WIDTH [31:0] $end
    $var wire 32 b! REG_ADDR_WIDTH [31:0] $end
    $var wire 32 `! BLOCK_SIZE [31:0] $end
    $var wire 128 ' instrs_in [127:0] $end
    $var wire 4 c! valid_in [3:0] $end
    $var wire 1 , is_safe $end
    $var wire 20 Z rd [19:0] $end
    $var wire 20 [ rs1 [19:0] $end
    $var wire 20 \ rs2 [19:0] $end
    $var wire 4 ] uses_rd [3:0] $end
    $var wire 4 ^ uses_rs1 [3:0] $end
    $var wire 4 _ uses_rs2 [3:0] $end
    $var wire 1 ` hazard_detected $end
    $scope module unnamedblk1 $end
     $var wire 32 d! i [31:0] $end
     $scope module unnamedblk2 $end
      $var wire 32 a j [31:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module u_dispatch $end
    $var wire 32 Z! BLOCK_ID_WIDTH [31:0] $end
    $var wire 32 [! INSTR_WIDTH [31:0] $end
    $var wire 32 \! BLOCK_SIZE [31:0] $end
    $var wire 32 \! NUM_CORES [31:0] $end
    $var wire 1 b clk $end
    $var wire 1 c rst $end
    $var wire 8 & block_id_in [7:0] $end
    $var wire 128 ' block_in [127:0] $end
    $var wire 1 + valid_in $end
    $var wire 1 , is_safe $end
    $var wire 4 # core_idle_mask [3:0] $end
    $var wire 8 & block_id_out_parallel [7:0] $end
    $var wire 128 ' block_out_parallel [127:0] $end
    $var wire 4 T! dispatch_parallel [3:0] $end
    $var wire 1 U! valid_parallel $end
    $var wire 8 & block_id_out_serial [7:0] $end
    $var wire 128 ' block_out_serial [127:0] $end
    $var wire 1 V! valid_serial $end
    $var wire 1 e! dispatching $end
    $scope module unnamedblk1 $end
     $var wire 32 Y! i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_monitor $end
    $var wire 32 `! NUM_CORES [31:0] $end
    $var wire 1 b clk $end
    $var wire 1 c rst $end
    $var wire 4 j core_busy [3:0] $end
    $var wire 4 # core_idle_mask [3:0] $end
    $scope module unnamedblk1 $end
     $var wire 32 d! i [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b1111 #
0$
b00000000000000000000000000000000 %
b00000000 &
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 '
0+
1,
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 -
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 7
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 <
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 A
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 F
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 K
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 P
b000 U
b000 V
b0000 W
0X
1Y
b00000000000000000000 Z
b00000000000000000000 [
b00000000000000000000 \
b0000 ]
b0000 ^
b0000 _
0`
b00000000000000000000000000000011 a
1b
1c
b00000000 d
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 e
0i
b0000 j
bk
b
0M!
b00000000 N!
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 O!
0S!
b0000 T!
0U!
0V!
0W!
0X!
b00000000000000000000000000000000 Y!
b00000000000000000000000000001000 Z!
b00000000000000000000000000100000 [!
b00000000000000000000000000000100 \!
1]!
b00000000000000000000000000001000 ^!
b00000000000000000000000000100000 _!
b00000000000000000000000000000100 `!
b00000000000000000000000000000011 a!
b00000000000000000000000000000101 b!
b1111 c!
b00000000000000000000000000000100 d!
0e!
#5
0b
#10
1b
#15
0b
#20
1b
#25
0b
#30
1b
#35
0b
#40
1b
#45
0b
#50
b00000001 &
b00000000000000000000000000010011000000000000000000000000000100110000000000000000000000000001001100000000000000000000000000010011 '
1+
b0000000100000000000000000000000000010011000000000000000000000000000100110000000000000000000000000001001100000000000000000000000000010011 -
b001 V
b0001 W
0Y
1b
0c
b00000001 d
b00000000000000000000000000010011000000000000000000000000000100110000000000000000000000000001001100000000000000000000000000010011 e
1i
b00000001 N!
b00000000000000000000000000010011000000000000000000000000000100110000000000000000000000000001001100000000000000000000000000010011 O!
b0001 T!
1U!
#55
0b
#60
b00000000000000000000000000100000 %
b00000000 &
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 '
0+
b001 U
b0000 W
1Y
1b
0i
bk
b
1M!
b00000000 N!
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 O!
b0000 T!
0U!
1W!
#65
0b
#70
1b
#75
0b
#80
1b
#85
0b
#90
1b
#95
0b
#100
1b
#105
0b
#110
1b
#115
0b
#120
1b
#125
0b
#130
1b
#135
0b
#140
1b
#145
0b
#150
1b
#155
0b
